<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackfarm.esports.dao.activity.ActivityDao">
    <resultMap id="Activity" type="com.stackfarm.esports.pojo.activity.Activity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="launcher_id" jdbcType="BIGINT" property="launcherId"/>
        <result column="launched_time" jdbcType="BIGINT" property="launchedTime"/>
        <result column="begin_time" jdbcType="BIGINT" property="beginTime"/>
        <result column="end_time" jdbcType="BIGINT" property="endTime"/>
        <result column="enroll_begin_time" jdbcType="BIGINT" property="enrollBeginTime"/>
        <result column="enroll_end_time" jdbcType="BIGINT" property="enrollEndTime"/>
        <result column="scope" jdbcType="VARCHAR" property="scope"/>
        <result column="types" jdbcType="CHAR" property="types"/>
        <result column="location" jdbcType="CHAR" property="location"/>
        <result column="detailed_location" jdbcType="VARCHAR" property="detailedLocation"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="note" jdbcType="LONGVARCHAR" property="note"/>
        <result column="size_of_people" jdbcType="INTEGER" property="sizeOfPeople"/>
        <result column="state" jdbcType="CHAR" property="state"/>
        <result column="participate_ids" jdbcType="VARCHAR" property="participateIds"/>
    </resultMap>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.stackfarm.esports.pojo.activity.Activity"
            useGeneratedKeys="true">
        insert into activity (`name`, launcher_id, launched_time,
                              begin_time, end_time, enroll_begin_time,
                              enroll_end_time, `scope`, types,
                              `location`, detailed_location, `level`, note,
                              size_of_people, `state`, participate_ids)
        values (#{name,jdbcType=VARCHAR}, #{launcherId,jdbcType=BIGINT}, #{launchedTime,jdbcType=BIGINT},
                #{beginTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{enrollBeginTime,jdbcType=BIGINT},
                #{enrollEndTime,jdbcType=BIGINT}, #{scope,jdbcType=VARCHAR}, #{types,jdbcType=CHAR},
                #{location,jdbcType=CHAR}, #{detailedLocation,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER},
                #{note,jdbcType=LONGVARCHAR}, #{sizeOfPeople,jdbcType=INTEGER},
                #{state,jdbcType=CHAR}, #{participateIds,jdbcType=VARCHAR})
    </insert>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete
        from activity
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <update id="update" parameterType="com.stackfarm.esports.pojo.activity.Activity">
        update activity
        set `name`                   = #{name,jdbcType=VARCHAR},
            launcher_id              = #{launcherId,jdbcType=BIGINT},
            launched_time            = #{launchedTime,jdbcType=BIGINT},
            begin_time               = #{beginTime,jdbcType=BIGINT},
            end_time                 = #{endTime,jdbcType=BIGINT},
            enroll_begin_time        = #{enrollBeginTime,jdbcType=BIGINT},
            enroll_end_time          = #{enrollEndTime,jdbcType=BIGINT},
            `scope`                  = #{scope,jdbcType=VARCHAR},
            types                    = #{types,jdbcType=CHAR},
            `location`               = #{location,jdbcType=CHAR},
            detailed_location        = #{detailedLocation,jdbcType=VARCHAR},
            `level`                  = #{level,jdbcType=INTEGER},
            note                     = #{note,jdbcType=LONGVARCHAR},
            size_of_people           = #{sizeOfPeople,jdbcType=LONGVARCHAR},
            `state`                  = #{state,jdbcType=CHAR},
            participate_ids          = #{participateIds,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectById" parameterType="java.lang.Long" resultMap="Activity">
        select * from activity
        where id = #{id,jdbcType=BIGINT} order by `level`,launched_time desc
    </select>

    <select id="selectByActName" parameterType="java.lang.String" resultMap="Activity">
        select * from activity
        where `name` = #{name,jdbcType=BIGINT} order by `level`,launched_time desc
    </select>

    <select id="selectByActNameAndUserIdAndState" resultMap="Activity">
        select * from activity
        where `name` = #{name,jdbcType=VARCHAR} and launcher_id = #{launcherId,jdbcType=BIGINT} and state = #{state,jdbcType=CHAR} order by `level`,launched_time desc
    </select>

    <select id="selectByScope" resultType="java.lang.Long">
    select id from activity
    where (scope = #{scope,jdbcType=VARCHAR} or scope = "ALL") and `name` like concat('%',#{name},'%') order by `level`,launched_time desc;
    </select>


    <select id="selectListByLauncherId" parameterType="java.lang.Long" resultMap="Activity">
        select * from activity
        where launcher_id = #{launcher_id,jdbcType=BIGINT} order by `level`,launched_time desc
    </select>

    <select id="selectByState" parameterType="java.lang.String" resultMap="Activity">
        select * from activity
        where state = #{state,jdbcType=CHAR} order by `level`,launched_time desc
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        select count(*) from activity
    </select>

    <select id="selectSuccessByUserId" parameterType="java.lang.Long" resultMap="Activity">
        select * from activity
            where (launcher_id = #{userId} and state = 'ACCESS')
               or (launcher_id = #{userId} and state = 'ENROLLING')
               or (launcher_id = #{userId} and state = 'ENROLL_CLOSED')
               or (launcher_id = #{userId} and state = 'HOLDING')
               or (launcher_id = #{userId} and state = 'ENDED') order by `level`,launched_time desc;
    </select>

    <select id="selectByActId" parameterType="java.lang.Long" resultMap="Activity">
        select * from activity
        where id = #{actId,jdbcType=BIGINT} order by `level`,launched_time desc
    </select>

    <select id="selectAll" resultMap="Activity">
    select * from activity
    where `name` like concat('%',#{name},'%') and state != 'CANCELED' order by `level`,launched_time,level desc
    limit #{page},#{number}
    </select>

</mapper>